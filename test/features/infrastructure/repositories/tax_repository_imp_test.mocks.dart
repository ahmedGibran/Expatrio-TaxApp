// Mocks generated by Mockito 5.4.4 from annotations
// in expatrio_tax_task/test/features/infrastructure/repositories/tax_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:expatrio_tax_task/features/features.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [TaxRemoteData].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaxRemoteData extends _i1.Mock implements _i2.TaxRemoteData {
  MockTaxRemoteData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.Tax?> getTaxData() => (super.noSuchMethod(
        Invocation.method(
          #getTaxData,
          [],
        ),
        returnValue: _i3.Future<_i2.Tax?>.value(),
      ) as _i3.Future<_i2.Tax?>);

  @override
  _i3.Future<void> updateTaxData(_i2.Tax? tax) => (super.noSuchMethod(
        Invocation.method(
          #updateTaxData,
          [tax],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

/// A class which mocks [TaxLocalData].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaxLocalData extends _i1.Mock implements _i2.TaxLocalData {
  MockTaxLocalData() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<_i2.Tax?> getTaxData() => (super.noSuchMethod(
        Invocation.method(
          #getTaxData,
          [],
        ),
        returnValue: _i3.Future<_i2.Tax?>.value(),
      ) as _i3.Future<_i2.Tax?>);

  @override
  _i3.Future<void> cacheTaxData(_i2.Tax? tax) => (super.noSuchMethod(
        Invocation.method(
          #cacheTaxData,
          [tax],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}
